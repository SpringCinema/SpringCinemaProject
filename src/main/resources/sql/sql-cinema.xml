<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.esc.springcinema.mapper.CinemaMapper">
    <!--    예약테이블 특정 날짜 상영 영화 예약 수 확인 쿼리 -->
    <select id="countBook" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM books
        WHERE title = #{title} AND cinema_name = #{cinemaName} AND screen_hall_name = #{screenHallName} AND view_time = #{viewTime}
          AND state_yn = 'Y'
    </select>

    <select id="isUserId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM members WHERE id = #{targetId}
    </select>

    <select id="login" parameterType="String" resultType="com.esc.springcinema.dto.MemberDto">
        SELECT id, name, out_date FROM members WHERE id = #{targetId} AND pwd = #{pwd}
    </select>

    <insert id="createMember" parameterType="com.esc.springcinema.dto.MemberDto">
        INSERT INTO members(id, pwd, name, birth, gender, email, tel, join_date)
        VALUES(#{id}, #{pwd}, #{name}, #{birth}, #{gender}, #{email}, #{tel},
               NOW())
    </insert>

    <!-- 현재상영작 목록 -->
    <select id="selectNowplayingMoviesList" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        <![CDATA[
        SELECT DISTINCT docid, title, SUBSTRING_INDEX(posters, '|', 1) AS posters, repRlsDate
        FROM movies m join screen_hall s on m.title = s.movie_title
        WHERE repRlsDate BETWEEN DATE_ADD(NOW(), INTERVAL -1 month) AND now()
        ]]>
    </select>

    <!-- 상영예정작 목록 -->
    <select id="selectUpcomingMoviesList" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        <![CDATA[
        SELECT DISTINCT docid, title, SUBSTRING_INDEX(posters, '|', 1) AS posters, repRlsDate
        FROM movies
        WHERE repRlsDate > now()
        ]]>
    </select>

    <!-- 카테고리별 추천목록을 가져온다. -->
    <select id="selectRecommendMoviesList" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        <![CDATA[
        SELECT docid, title, SUBSTRING_INDEX(posters, '|', 1) AS posters
        FROM movies
        WHERE genre LIKE #{genre}
        ORDER BY repRlsDate DESC LIMIT 9
        ]]>
    </select>

    <!-- 관람등급을 기준으로 영화를 검색 -->
    <select id="selectBirthMovieList" parameterType="java.util.List" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        SELECT docid, title, SUBSTRING_INDEX(posters, '|', 1) AS posters FROM movies WHERE rating IN (
            <foreach collection="list" item="item" separator=",">
                #{item}
            </foreach>
        )
        <![CDATA[
            AND repRlsDate <= NOW()
            ORDER BY repRlsDate DESC LIMIT 9
        ]]>
    </select>

    <insert id="insertMovieDatas" parameterType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        INSERT INTO movies(docid, title, titleEng, nation, company, runtime, rating, genre, repRlsDate, keywords, posters, stlls, awards1, plotText)
        VALUES(#{docid}, #{title}, #{titleEng}, #{nation}, #{company}, #{runtime}, #{rating}, #{genre}, #{repRlsDate}, #{keywords},
               #{posters}, #{stlls}, #{awards1}, #{plotsDto.plotDto.plotText})
    </insert>

    <select id="selectMovieDetail" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        <![CDATA[
        SELECT docid, title, titleEng, SUBSTRING_INDEX(posters, '|', 1) AS posters, nation, runtime, rating, genre, repRlsDate, keywords, awards1, stlls
        FROM movies
        WHERE docid = #{docid}
        ]]>
    </select>

    <select id="selectPlotText" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.PlotDto">
        <![CDATA[
        SELECT plotText
        FROM movies
        WHERE docid = #{docid}
        ]]>
    </select>

    <insert id="insertDirectors" parameterType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        INSERT INTO directors(docid, directorNm) VALUES(#{docid}, #{directorsDto.directorDto.directorNm})
    </insert>

    <insert id="insertActors" parameterType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        INSERT INTO actors(docid, actorNm) VALUES
        <foreach collection="actorsDto.actors" item="item" separator="," index="index">
            (#{docid}, #{item.actorNm})
        </foreach>
    </insert>

    <select id="selectMovieDocid" resultType="int" parameterType="String">
        SELECT COUNT(*) FROM movies WHERE docid = #{docid}
    </select>

    <select id="selectDirector" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.DirectorDto">
        <![CDATA[
        SELECT directorNm
        FROM directors
        WHERE docid = #{docid}
        ]]>
    </select>

    <select id="selectActor" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.ActorDto">
        <![CDATA[
        SELECT actorNm
        FROM actors
        WHERE docid = #{docid} AND actorNm != ''
        LIMIT 4
        ]]>
    </select>

    <!-- 서버 최초 구동했거나 새로 목록이 갱신되었을때만 장르 목록을 가져온다. -->
    <select id="selectGenre" resultType="String">
        SELECT DISTINCT genre FROM movies;
    </select>

    <!-- 선택한 유저의 생년을 가져온다. -->
    <select id="selectUserBirth" resultType="int" parameterType="String">
        SELECT birth FROM members WHERE id = #{id}
    </select>

    <!-- 선택한 영화들이 현재 상영중인지를 확인한다. -->
    <select id="selectViewAbleMovie" resultType="String" parameterType="java.util.List">
        SELECT DISTINCT movie_title FROM screen_hall
        WHERE movie_title IN (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </select>

<!--    비밀번호 찾기 아이디 이메일 확인-->
<!--    최종 수정 : 2022-12-21-->
<!--    마지막 작성자 : yang-->
    <select id="checkIdEmail" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM members WHERE id = #{id} AND email = #{email}
    </select>

    <!--    비밀번호 변경-->
    <!--    최종 수정 : 2022-12-21-->
    <!--    마지막 작성자 : yang-->
    <update id="pwdUpdate" parameterType="String">
        UPDATE members SET pwd = #{pwd} WHERE id = #{id}
    </update>

    <!-- 예고편 -->
    <select id="trailer" resultType="com.esc.springcinema.dto.MovieUrlDto">
        <![CDATA[
        SELECT docid, url
        FROM movie_urls
        WHERE docid = #{docid}
        ]]>
    </select>

    <!-- 영화 검색 -->
    <select id="searchMoviesList" parameterType="String" resultType="com.esc.springcinema.dto.apiMovieDto.MovieDto">
        <![CDATA[
        SELECT docid, title, SUBSTRING_INDEX(posters, '|', 1) AS posters, repRlsDate
        FROM movies
        WHERE title REGEXP #{keyword}
        ]]>
    </select>
</mapper>